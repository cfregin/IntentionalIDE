package de.intentionalide.parser;

import java.util.logging.Level;
import java.util.logging.Logger;

import org.antlr.runtime.ANTLRStringStream;
import org.antlr.runtime.CharStream;
import org.antlr.runtime.ParserRuleReturnScope;
import org.antlr.runtime.RecognitionException;
import org.antlr.runtime.TokenRewriteStream;
import org.antlr.runtime.TokenStream;
import org.antlr.runtime.tree.CommonTree;

import de.intentionalide.code.IntentionalClass;
import de.intentionalide.code.IntentionalProgram;
import de.intentionalide.parser.java.JavaLexer;
import de.intentionalide.parser.java.JavaParser;

public class IntentionalJavaParser {
	private static Logger log = Logger.getLogger("IntentionalJavaParser");
	private IntentionalProgram program;
	public IntentionalJavaParser(IntentionalProgram program){
		this.program = program;
	}
	public void parseClassFile(String javaCode, String filename) throws RecognitionException{
		CharStream stream = new ANTLRStringStream(javaCode);
		JavaLexer lexer = new JavaLexer(stream);
		TokenStream tokens = new TokenRewriteStream(lexer);
		JavaParser parser = new JavaParser(tokens);
		parser.setIntentionalProgram(program);
		ParserRuleReturnScope result = parser.compilationUnit();
		IntentionalClass currentClass = parser.getCurrentClass();
		program.addClass(currentClass.getClassName(), currentClass);
				
	}
	public void parseTree(Object tree){
		if(!(tree instanceof CommonTree)){
			return;
		}
		log.log(Level.INFO,tree.toString());
		CommonTree javaTree = (CommonTree)tree;
		for(Object child:javaTree.getChildren()){
			log.log(Level.INFO, child.toString());
		}
		
		
	}
	
}
